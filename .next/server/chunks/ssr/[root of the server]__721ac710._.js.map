{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kerem/Desktop/coffee-roulette-app/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\r\nimport {googleAI} from '@genkit-ai/googleai';\r\n\r\nexport const ai = genkit({\r\n  plugins: [googleAI()],\r\n  model: 'googleai/gemini-2.0-flash',\r\n});\r\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kerem/Desktop/coffee-roulette-app/src/ai/flows/suggest-coffee.ts"],"sourcesContent":["// This is an auto-generated file from Firebase Studio.\r\n'use server';\r\n\r\n/**\r\n * @fileOverview A coffee suggestion AI agent.\r\n *\r\n * - suggestCoffee - A function that handles the coffee suggestion process.\r\n * - SuggestCoffeeInput - The input type for the suggestCoffee function.\r\n * - SuggestCoffeeOutput - The return type for the suggestCoffee function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\n\r\nconst SuggestCoffeeInputSchema = z.object({\r\n  availableIngredients: z\r\n    .string()\r\n    .describe(\r\n      'A comma-separated list of ingredients available to make coffee, e.g., coffee, milk, sugar, chocolate.'\r\n    ),\r\n  preferredFlavor: z\r\n    .string()\r\n    .optional()\r\n    .describe('The preferred flavor profile, e.g., sweet, strong, bitter.'),\r\n});\r\nexport type SuggestCoffeeInput = z.infer<typeof SuggestCoffeeInputSchema>;\r\n\r\nconst SuggestCoffeeOutputSchema = z.object({\r\n  name: z.string().describe('The name of the suggested coffee.'),\r\n  ingredients: z.string().describe('A list of ingredients for the suggested coffee.'),\r\n  instructions: z.string().describe('Instructions for making the suggested coffee.'),\r\n});\r\nexport type SuggestCoffeeOutput = z.infer<typeof SuggestCoffeeOutputSchema>;\r\n\r\nexport async function suggestCoffee(input: SuggestCoffeeInput): Promise<SuggestCoffeeOutput> {\r\n  return suggestCoffeeFlow(input);\r\n}\r\n\r\nconst prompt = ai.definePrompt({\r\n  name: 'suggestCoffeePrompt',\r\n  input: {schema: SuggestCoffeeInputSchema},\r\n  output: {schema: SuggestCoffeeOutputSchema},\r\n  prompt: `You are a world-class barista, skilled at creating unique and delicious coffee recipes.\r\n\r\n  Based on the available ingredients and the user's preferred flavor, suggest a coffee recipe.\r\n\r\n  Available Ingredients: {{{availableIngredients}}}\r\n  Preferred Flavor: {{{preferredFlavor}}}\r\n\r\n  Consider these examples:\r\n  - If the available ingredients are coffee, milk, sugar, and the preferred flavor is sweet, suggest a Caramel Latte.\r\n  - If the available ingredients are coffee, water, and the preferred flavor is strong, suggest an Americano.\r\n\r\n  Please suggest a coffee recipe with a name, ingredients, and instructions.\r\n  Make sure the output can be parsed as a JSON object with \"name\", \"ingredients\", and \"instructions\" fields.\r\n  Do not include extra text or explanations.\r\n\r\n  Example:\r\n  {\r\n    \"name\": \"Mocha\",\r\n    \"ingredients\": \"Coffee, chocolate syrup, milk, whipped cream\",\r\n    \"instructions\": \"Brew coffee, add chocolate syrup, steam milk, combine, top with whipped cream.\"\r\n  }`,\r\n});\r\n\r\nconst suggestCoffeeFlow = ai.defineFlow(\r\n  {\r\n    name: 'suggestCoffeeFlow',\r\n    inputSchema: SuggestCoffeeInputSchema,\r\n    outputSchema: SuggestCoffeeOutputSchema,\r\n  },\r\n  async input => {\r\n    const {output} = await prompt(input);\r\n    return output!;\r\n  }\r\n);\r\n"],"names":[],"mappings":"AAAA,uDAAuD;;;;;;AAGvD;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,sBAAsB,uIAAA,CAAA,IAAC,CACpB,MAAM,GACN,QAAQ,CACP;IAEJ,iBAAiB,uIAAA,CAAA,IAAC,CACf,MAAM,GACN,QAAQ,GACR,QAAQ,CAAC;AACd;AAGA,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzC,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACpC;AAGO,eAAe,uCAAW,GAAX,cAAc,KAAyB;IAC3D,OAAO,kBAAkB;AAC3B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAwB;IACxC,QAAQ;QAAC,QAAQ;IAAyB;IAC1C,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;GAoBR,CAAC;AACJ;AAEA,MAAM,oBAAoB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACrC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAxCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 370, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kerem/Desktop/coffee-roulette-app/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kerem/Desktop/coffee-roulette-app/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 398, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}